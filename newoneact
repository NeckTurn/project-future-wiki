<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞–∫—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        
        body {
            background: #f0f2f5;
            padding: 15px;
            line-height: 1.5;
        }
        
        .container {
            max-width: 100%;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: #2c3e50;
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        .form-section {
            padding: 15px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #2c3e50;
            font-size: 14px;
        }
        
        input, textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            -webkit-appearance: none;
        }
        
        textarea {
            min-height: 80px;
            resize: vertical;
        }
        
        .btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 15px;
            border-radius: 5px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            width: 100%;
            margin: 5px 0;
        }
        
        .btn-copy {
            background: #27ae60;
        }
        
        .btn-new {
            background: #e67e22;
        }
        
        .result {
            display: none;
            padding: 15px;
            background: #f8f9fa;
            margin-top: 15px;
            border-radius: 5px;
            border-left: 4px solid #3498db;
        }
        
        .result-text {
            white-space: pre-line;
            background: white;
            padding: 15px;
            border-radius: 5px;
            border: 1px solid #ddd;
            font-size: 14px;
        }
        
        .error {
            border-color: #e74c3c !important;
        }
        
        .success {
            color: #27ae60;
            text-align: center;
            margin: 10px 0;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìã –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞–∫—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏</h1>
            <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∞</p>
        </div>
        
        <div class="form-section">
            <form id="claimForm">
                <div class="form-group">
                    <label for="claimNumber">–ù–æ–º–µ—Ä —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ *</label>
                    <input type="text" id="claimNumber" required placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä">
                </div>
                
                <div class="form-group">
                    <label for="claimDate">–î–∞—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ *</label>
                    <input type="date" id="claimDate" required>
                </div>
                
                <div class="form-group">
                    <label for="productName">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è *</label>
                    <input type="text" id="productName" required placeholder="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è">
                </div>
                
                <div class="form-group">
                    <label for="serialNumber">–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä *</label>
                    <input type="text" id="serialNumber" required placeholder="–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä">
                </div>
                
                <div class="form-group">
                    <label for="patientName">–§–ò–û –ø–∞—Ü–∏–µ–Ω—Ç–∞ *</label>
                    <input type="text" id="patientName" required placeholder="–§–ò–û –ø–∞—Ü–∏–µ–Ω—Ç–∞">
                </div>
                
                <div class="form-group">
                    <label for="birthDate">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è *</label>
                    <input type="date" id="birthDate" required>
                </div>
                
                <div class="form-group">
                    <label for="age">–í–æ–∑—Ä–∞—Å—Ç (–ª–µ—Ç) *</label>
                    <input type="number" id="age" required placeholder="–í–æ–∑—Ä–∞—Å—Ç">
                </div>
                
                <div class="form-group">
                    <label for="weight">–í–µ—Å (–∫–≥) *</label>
                    <input type="number" id="weight" required placeholder="–í–µ—Å">
                </div>
                
                <div class="form-group">
                    <label for="height">–†–æ—Å—Ç (—Å–º) *</label>
                    <input type="number" id="height" required placeholder="–†–æ—Å—Ç">
                </div>
                
                <div class="form-group">
                    <label for="activityLevel">–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ MOBIS *</label>
                    <input type="text" id="activityLevel" required placeholder="–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏">
                </div>
                
                <div class="form-group">
                    <label for="diagnosis">–î–∏–∞–≥–Ω–æ–∑ –∏ –ü–û–ò *</label>
                    <textarea id="diagnosis" required placeholder="–î–∏–∞–≥–Ω–æ–∑ –∏ –ü–û–ò"></textarea>
                </div>
                
                <div class="form-group">
                    <label for="usageStart">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ *</label>
                    <input type="date" id="usageStart" required>
                </div>
                
                <div class="form-group">
                    <label for="malfunction">–•–∞—Ä–∞–∫—Ç–µ—Ä –ø–æ–ª–æ–º–∫–∏ *</label>
                    <textarea id="malfunction" required placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª–æ–º–∫–∏"></textarea>
                </div>
                
                <div class="form-group">
                    <label for="invoiceNumber">–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ–π *</label>
                    <input type="text" id="invoiceNumber" required placeholder="–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ–π">
                </div>
                
                <div class="form-group">
                    <label for="invoiceDate">–î–∞—Ç–∞ –Ω–∞–∫–ª–∞–¥–Ω–æ–π *</label>
                    <input type="date" id="invoiceDate" required>
                </div>
                
                <button type="button" class="btn" onclick="generateClaim()">‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ç</button>
            </form>
            
            <div class="result" id="result">
                <h3>üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫—Ç —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏:</h3>
                <div class="result-text" id="resultText"></div>
                <button class="btn btn-copy" onclick="copyToClipboard()">üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä</button>
                <button class="btn btn-new" onclick="newClaim()">üîÑ –ù–æ–≤—ã–π –∞–∫—Ç</button>
                <div id="copyStatus" class="success" style="display:none;">‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!</div>
            </div>
        </div>
    </div>

    <script>
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('claimDate').value = today;
        });
        
        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            const day = String(date.getDate()).padStart(2, '0');
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const year = date.getFullYear();
            return `${day}.${month}.${year}`;
        }
        
        function generateClaim() {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            document.getElementById('copyStatus').style.display = 'none';
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            const requiredFields = [
                'claimNumber', 'claimDate', 'productName', 'serialNumber',
                'patientName', 'birthDate', 'age', 'weight', 'height',
                'activityLevel', 'diagnosis', 'usageStart', 'malfunction',
                'invoiceNumber', 'invoiceDate'
            ];
            
            let isValid = true;
            requiredFields.forEach(field => {
                const element = document.getElementById(field);
                if (!element.value.trim()) {
                    element.classList.add('error');
                    isValid = false;
                } else {
                    element.classList.remove('error');
                }
            });
            
            if (!isValid) {
                alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!');
                return;
            }
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∞–∫—Ç–∞
            const claimText = `–†–µ–∫–ª–∞–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∞–∫—Ç ${document.getElementById('claimNumber').value}
–æ—Ç ${formatDate(document.getElementById('claimDate').value)}.

–ù–∞–ø—Ä–∞–≤–ª—è–µ–º –í–∞–º –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∏–∑–¥–µ–ª–∏–µ: ${document.getElementById('productName').value} —Å —Å–µ—Ä–∏–π–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º SN ${document.getElementById('serialNumber').value}, –¥–ª—è:
–≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã –ø–æ–ª–æ–º–∫–∏, —Ä–µ–º–æ–Ω—Ç–∞ –∏–ª–∏ –∑–∞–º–µ–Ω—ã –∏–∑–¥–µ–ª–∏—è (—Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏);

–ü–∞—Ü–∏–µ–Ω—Ç (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é):

–§–ò–û: ${document.getElementById('patientName').value}
–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${formatDate(document.getElementById('birthDate').value)}
–í–æ–∑—Ä–∞—Å—Ç: ${document.getElementById('age').value} –ª–µ—Ç.
–í–µ—Å: ${document.getElementById('weight').value} –∫–≥.
–†–æ—Å—Ç: ${document.getElementById('height').value} —Å–º.
–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ MOBIS: ${document.getElementById('activityLevel').value}
–î–∏–∞–≥–Ω–æ–∑ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ü–û–ò, –≤ –∫–æ—Ç–æ—Ä–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–µ –∏–∑–¥–µ–ª–∏–µ: ${document.getElementById('diagnosis').value}

–ò–∑–¥–µ–ª–∏–µ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é):

–°—Ä–æ–∫–∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–≥–æ –∏–∑–¥–µ–ª–∏—è: —Å ${formatDate(document.getElementById('usageStart').value)}
–•–∞—Ä–∞–∫—Ç–µ—Ä –ø–æ–ª–æ–º–∫–∏, –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–≥–æ –∏–∑–¥–µ–ª–∏—è: ${document.getElementById('malfunction').value}
–ù–æ–º–µ—Ä –∏ –¥–∞—Ç–∞ —Ä–∞—Å—Ö–æ–¥–Ω–æ–π –Ω–∞–∫–ª–∞–¥–Ω–æ–π/ –£–ü–î, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –ø–æ–∫—É–ø–∞–ª–æ—Å—å —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–µ –∏–∑–¥–µ–ª–∏–µ: ${document.getElementById('invoiceNumber').value} –æ—Ç ${formatDate(document.getElementById('invoiceDate').value)}.`;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            document.getElementById('resultText').textContent = claimText;
            document.getElementById('result').style.display = 'block';
            
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
            document.getElementById('result').scrollIntoView({ behavior: 'smooth' });
        }
        
        function copyToClipboard() {
            const text = document.getElementById('resultText').textContent;
            
            // –ü—Ä–æ–±—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API
            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(text).then(() => {
                    showCopySuccess();
                }).catch(() => {
                    fallbackCopyText(text);
                });
            } else {
                fallbackCopyText(text);
            }
        }
        
        function fallbackCopyText(text) {
            // –°—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            const textArea = document.createElement('textarea');
            textArea.value = text;
            textArea.style.position = 'fixed';
            textArea.style.opacity = '0';
            document.body.appendChild(textArea);
            textArea.select();
            
            try {
                document.execCommand('copy');
                showCopySuccess();
            } catch (err) {
                alert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é.');
            }
            
            document.body.removeChild(textArea);
        }
        
        function showCopySuccess() {
            document.getElementById('copyStatus').style.display = 'block';
            setTimeout(() => {
                document.getElementById('copyStatus').style.display = 'none';
            }, 3000);
        }
        
        function newClaim() {
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            document.getElementById('claimForm').reset();
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('claimDate').value = today;
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏ –æ—à–∏–±–æ–∫
            document.querySelectorAll('.error').forEach(el => {
                el.classList.remove('error');
            });
            
            // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            document.getElementById('result').style.display = 'none';
            
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É
            window.scrollTo(0, 0);
        }
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ
        document.querySelectorAll('input, textarea').forEach(element => {
            element.addEventListener('input', function() {
                this.classList.remove('error');
            });
        });
    </script>
</body>
</html>